@model Tracker.Models.DetailsViewModel
@{
    ViewBag.Title = "Details";
}

<div class="panel-group">
    <div class="panel">
        <h2>@Model.Track.Name</h2>
        <div class="track-info">
            <div class="track-info-row">
                <p><span>Data dodania:</span> @Model.Track.UploadDate</p>
            </div>
            <div class="track-info-row">
                <p><span>Start:</span> @Model.Track.StartLocation</p>
                <p><span>Koniec:</span> @Model.Track.EndLocation</p>
            </div>
            <div class="track-info-row">
                <p><span>Dystans:</span> @Math.Round(@Model.Track.Distance, 2) km</p>
                <p><span>Średnia prędkość:</span> @Math.Round(@Model.Track.AvarageSpeed, 2) km/h</p>
            </div>
        </div>
        <div id="map"></div>
    </div>
</div>

<div class="panel-group">
    <div class="panel">
        <h2>Podobne trasy:</h2>
        @if (Model.SimilarTracks.Count > 0)
        {
            <div class="track-cards">
                @foreach (var similarTrack in Model.SimilarTracks)
                {
                    <div class="track-card">
                        @Html.ActionLink(@similarTrack.Name, "Compare",
                                new
                                {
                                    trackId1 = Model.Track.Id,
                                    trackId2 = similarTrack.Id,
                                }, null)
                        <div class="track-card-row">
                            <p><span>Data dodania:</span> @similarTrack.UploadDate</p>
                        </div>
                        <div class="track-card-row">
                            <p><span>Start:</span> @similarTrack.StartLocation</p>
                            <p><span>Koniec:</span> @similarTrack.EndLocation</p>
                        </div>
                        <div class="track-card-row">
                            <p><span>Dystans:</span> @Math.Round(similarTrack.Distance, 2) km</p>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p>Nie znaleziono podobnych tras</p>
        }
    </div>
</div>

@section Scripts
{
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
            integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin="">
    </script>
    <script>
        let data = @Html.Raw(Json.Encode(Model.TrackPoints));

        let trackCoordinates = new Array();

        for (let i = 0; i < data.length; i++) {
            let obj = data[i];
            trackCoordinates.push(new L.LatLng(obj.Latitude, obj.Longitude));
        }
        let map = L.map('map');

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
            maxZoom: 18,
        }).addTo(map);

        let polyline = L.polyline(trackCoordinates, { color: 'red' }).addTo(map);
        map.fitBounds(polyline.getBounds());

        let startMarker = L.marker(trackCoordinates[0]).addTo(map);
        let endMarker = L.marker(trackCoordinates[trackCoordinates.length - 1]).addTo(map);
    </script>
}
