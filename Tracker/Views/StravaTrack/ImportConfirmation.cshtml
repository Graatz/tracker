@model Tracker.Models.ImportConfirmationViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel-group">
    <div class="panel">
        <h2>Dostępne trasy (Strava)</h2>
        @if (Model.DetailedActivities.Count > 0)
        {
            using (Html.BeginForm("AddStravaTracksToDb", "StravaTrack", FormMethod.Post, null))
            {
                for (int i = 0; i < Model.DetailedActivities.Count; i++)
                {
                    <div class="import-card">
                        <div class="import-name">
                            @Html.CheckBoxFor(m => m.DetailedActivities[i].Import)
                            <p>@Model.DetailedActivities[i].Name</p>
                        </div>
                        <div class="import-distance">
                            @Math.Round((Model.DetailedActivities[i].Distance / 1000), 2) km
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.DetailedActivities[i].Id)
                    @Html.HiddenFor(m => m.DetailedActivities[i].Name)
                    @Html.HiddenFor(m => m.DetailedActivities[i].Description)
                    @Html.HiddenFor(m => m.DetailedActivities[i].Map.Polyline)
                    @Html.HiddenFor(m => m.DetailedActivities[i].Distance)               
                    @Html.HiddenFor(m => m.DetailedActivities[i].AverageSpeed)
                    @Html.HiddenFor(m => m.DetailedActivities[i].Date)
                }

                <div class="buttons-row">
                    <input type="submit" value="Zatwierdź" class="button-info" />
                    <input type="button" value="Odrzuć" class="button-default" onclick="location.href='@Url.Action("Index", "Home")'" />
                </div>
                
                @Html.AntiForgeryToken()
            }
        }
        else
        {
            <div class="no-tracks-available-info">
                <p>Brak dostępnych tras do zaimportowania</p>
            </div>
        }
    </div>
</div>
